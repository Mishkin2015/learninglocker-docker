server {
	listen 80;
	server_name _;
	root /var/www/html/public;
	error_log /dev/stdout info;
	access_log /dev/stdout proxyLogging;
    rewrite_log on;

    index index.php;

	# Forward all HTTP to HTTPS
	# Does NOT forward on local dev because http_x_forwarded_proto header does not exist.
    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }


    #location / {
    #    autoindex on;

        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
    #    try_files $uri $uri/ /index.php?$query_string;

        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    #}

    # Remove trailing slash to please routing system.
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # PHP FPM configuration.
	location / {
	   try_files $uri $uri/ /index.php?$query_string;
   }

   location ~ \.php$ {
	   try_files $uri /index.php =404;
	   fastcgi_split_path_info ^(.+\.php)(/.+)$;
	   fastcgi_pass 127.0.0.1:9000;
	   fastcgi_index index.php;
	   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	   include fastcgi_params;
   }


    # We don't need .ht files with nginx.
    location ~ /\.ht {
        deny all;
    }

    # Set header expirations on per-project basis
    location ~* \.(?:ico|css|js|jpe?g|JPG|png|svg|woff)$ {
        expires 365d;
    }


    location /robots.txt {
        try_files /robots.txt =404;
    }

    #
    # Error Pages
    #

    error_page 503 @maintenance;
    if (-f $document_root/maintenance.html ) {
        return 503;
    }
    location @maintenance {
        try_files /maintenance.html =503;
    }

    #
    # Deny access to protected folder/files
    #

    location ^~ /(silverstripe-cache|vendor|docker|phpmyadmin|MyAdmin|pma|phpMyAdmin|phpmoadmin|tests)/ {
        deny all;
    }

    location ~ /composer\.(json|lock) {
        deny all;
    }
    location ~ /(\.|web\.config) {
        deny all;
    }
    location ~ \.(yml|bak|swp|ss)$ {
        deny all;
    }
    location ~ ~$ {
        deny all;
    }
    location ~ \.(php|php[345]|phtml|inc)$ {
        deny all;
    }
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    large_client_header_buffers 4 64k;

    #client_max_body_size 2G;

    if ($request_method ~ ^(CONNECT)$ )
    {
        return 444;
    }
    location ~ /(mysite|framework|cms)/.*\.(php|php3|php4|php5|phtml|inc)$ {
        deny all;
    }
}
